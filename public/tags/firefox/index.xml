<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Firefox on Rich told me to blog</title>
    <link>/tags/firefox/</link>
    <description>Recent content in Firefox on Rich told me to blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>take what you need © {year}</copyright>
    <lastBuildDate>Thu, 30 Jan 2025 16:06:04 +0100</lastBuildDate>
    <atom:link href="/tags/firefox/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bling SQL Injection</title>
      <link>/dvwa/blind-sql-injection/</link>
      <pubDate>Thu, 30 Jan 2025 16:06:04 +0100</pubDate>
      <guid>/dvwa/blind-sql-injection/</guid>
      <description>&lt;p&gt;Blind SQL injection occurs when an application is vulnerable to SQL injection, but its HTTP responses do not contain the results of the relevant SQL query or the details of any database errors.&lt;/p&gt;&#xA;&lt;p&gt;Many techniques such as UNION attacks are not effective with blind SQL injection vulnerabilities. This is because they rely on being able to see the results of the injected query within the application&amp;rsquo;s responses. It is still possible to exploit blind SQL injection to access unauthorized data, but different techniques must be used.&lt;/p&gt;</description>
    </item>
    <item>
      <title>File Upload Vulnerabilities</title>
      <link>/dvwa/file-upload-vulnerabilities/</link>
      <pubDate>Wed, 15 Jan 2025 16:06:04 +0100</pubDate>
      <guid>/dvwa/file-upload-vulnerabilities/</guid>
      <description>&lt;p&gt;File upload vulnerabilities are when a web server allows users to upload files to its filesystem without sufficiently validating things like their name, type, contents, or size. Failing to properly enforce restrictions on these could mean that even a basic image upload function can be used to upload arbitrary and potentially dangerous files instead. This could even include server-side script files that enable remote code execution.&lt;/p&gt;&#xA;&lt;p&gt;In some cases, the act of uploading the file is in itself enough to cause damage. Other attacks may involve a follow-up HTTP request for the file, typically to trigger its execution by the server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reflected XSS</title>
      <link>/dvwa/xss-reflected/</link>
      <pubDate>Tue, 24 Dec 2024 16:06:04 +0100</pubDate>
      <guid>/dvwa/xss-reflected/</guid>
      <description>&lt;p&gt;Reflected XSS is an injection attack where malicious scripts are sent to a vulnerable web server (often via URLs), and the server immediately includes (reflects) those scripts unsanitized in the HTML response back to the victim&amp;rsquo;s browser, which then executes them. It relies on the server reflecting user input directly into the response page.&lt;/p&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;javascript:/*--&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;/style&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/xmp&amp;gt;&#xA;&amp;lt;svg/onload=&amp;#39;+/&amp;#34;`/+/onmouseover=1/+/[*/[]/+alert(42);//&amp;#39;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IMG &amp;#34;&amp;#34;&amp;#34;&amp;gt;&amp;lt;SCRIPT&amp;gt;alert(&amp;#34;XSS&amp;#34;)&amp;lt;/SCRIPT&amp;gt;&amp;#34;\&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;a href=&amp;#34;javascript:alert(String.fromCharCode(88,83,83))&amp;#34;&amp;gt;Click Me!&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IMG SRC=# onmouseover=&amp;#34;alert(&amp;#39;xxs&amp;#39;)&amp;#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IMG SRC=/ onerror=&amp;#34;alert(String.fromCharCode(88,83,83))&amp;#34;&amp;gt;&amp;lt;/img&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;DVWA has 3 settings to show different levels of security. Below are the bypasses for each level.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Caido Certificate Error</title>
      <link>/lab/caido-setup/</link>
      <pubDate>Wed, 07 Feb 2024 16:06:04 +0100</pubDate>
      <guid>/lab/caido-setup/</guid>
      <description>&lt;p&gt;Use the following guide to install the package:&lt;br&gt;&#xA;&lt;a href=&#34;https://docs.caido.io/guides/#installing-on-linux&#34;&gt;https://docs.caido.io/guides/#installing-on-linux&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once you&amp;rsquo;ve installed Caido in Kali and you have used it in your on your self hosted website. But, you get a certificate error when you go to a lab on Portswigger.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;br&gt;&#xA;&lt;img src=&#34;2.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you installed Caido you have been prompted to set up a proxy server in the network settings in firefox.&lt;/p&gt;&#xA;&lt;p&gt;As part of the install a certificate should have been added to your &amp;rsquo;trusted certificates&amp;rsquo;. This is fine to use for local machines eg.127.0.01.&lt;br&gt;&#xA;Go into the certificate and tick the box that allows firefox to trust it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
